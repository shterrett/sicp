(define (make-monitored f)
  (let ((count 0))
    (lambda (x)
      (cond ((eq? x 'how-many-calls?) count)
            ((eq? x 'reset-count)
             (set! count 0)
             count)
            (else (set! count (+ count 1))
                  (f x))))))

(define (plus-two x)
  (+ 2 x))

(define mf (make-monitored plus-two))
(mf 3)
(mf 4)
(mf 'how-many-calls?)
(mf 1)
(mf 'how-many-calls?)
(mf 'reset-count)
(mf 'how-many-calls?)
