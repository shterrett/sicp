(define (c+ x y)
  (let ((z (make-connector)))
    (adder x y z)
    z))

(define (c- x y)
  (let ((b (make-connector))
        (c (make-connector))
        (d (make-connector)))
    (constant -1 b)
    (multiplier b y c)
    (adder x c d)
    d))

(define (c* x y)
  (let ((z (make-connector)))
    (multiplier x y z)
    z))

(define (c/ x y)
  (let ((b (make-connector))
        (c (make-connector))
        (d (make-connector)))
    (constant -1 b)
    (exponentiater b y c)
    (multiplier x c d)
    d))

(define (cv x)
  (let ((y (make-connector)))
    (constant x y)
    y))
