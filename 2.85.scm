(define (complex->real n)
  (if (equ? (make-from-real-imag (real n) (0)) n)
    (real n)
    (#f)))

(define (real->int n)
  (if (= (make-real (round n)) n)
    (round n)
    (#f)))

(define (drop n)
  (cond ((eq? (type n) 'complex)
         (if (complex->real n)
           (drop (complex->real n))
           n))
        ((eq? (type n) 'real)
         (if (real->int n)
           (real->int n)
           n))
        (else (error "not a droppable type" (type n)))))
